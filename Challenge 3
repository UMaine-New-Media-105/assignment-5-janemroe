//Jane Roe A5C3
//Pool table simulation

// Array to store spotlights
let spotlights = [];

// Array to store pool balls
let poolBalls = [];

// Array of possible pool ball numbers
let poolBallNumber = [1, 2, 3, 4, 5, 6, 7];

// Array of possible pool ball colors
let poolBallColor = [
  "green",
  "blue",
  "red",
  "orange",
  "yellow",
  "maroon",
  "purple",
];

// Array of possible light colors
let lightColor = [
  "hsla(10, 80%, 50%, .3)",
  "hsla(20, 80%, 50%, .3)",
  "hsla(30, 80%, 50%, .3)",
  "hsla(40, 80%, 50%, .3)",
  "hsla(50, 80%, 50%, .3)",
  "hsla(180, 80%, 50%, .3)",
  "hsla(220, 100%, 50%, .3)",
  "hsla(240, 100%, 50%, .3)",
];

// Class for the cue ball
class cueBall {
  constructor(x, y, speed) {
    this.x = x;
    this.y = y;
    this.speed = speed;
  }

  // Function to display the cue ball
  show() {
    push();
    fill("white");
    ellipse(this.x, this.y, 25);
    pop();
  }

  // Function to move the cue ball
  move() {
    this.x += this.speed; // Move horizontally
    if (this.x < 0 || this.x >= width) {
      this.speed *= -1; // Reverse direction if reaching canvas edges
    }
  }
}

// Declare cueBall1 variable globally
let cueBall1;

// Setup function, runs once at the beginning
function setup() {
  createCanvas(400, 400);
  angleMode(DEGREES);
  poolBallX = 0;

  // Generate spotlights
  for (let c = 0; c < 25; c++) {
    spotlights[c] = {
      x: random(0, 400),
      y: random(0, 400),
      size: random(0.8, 1.8),
      light: random(lightColor),

      move: function () {
        this.x = this.x + random(-15, 15);
        this.y = this.y + random(-15, 15);
      },
      show: function () {
        push();
        noStroke();
        fill(this.light);
        ellipse(this.x, this.y, 50);
        pop();
      },
    };
  }

  // Generate pool balls
  for (let i = 0; i < 10; i++) {
    poolBalls[i] = {
      number: random(poolBallNumber),
      color: random(poolBallColor),
      speed: 4,
      size: 1,
      y: random(45, 355),
      x: random(45, 300),

      move: function () {
        this.x += this.speed; // Move horizontally
        if (this.x < 0 || this.x >= width) {
          this.speed *= -1; // Reverse direction if reaching canvas edges
        }
      },
      show: function () {
        push();
        scale(this.size);
        noStroke();
        fill(this.color);
        ellipse(this.x, this.y, 30); // Draw the ball at its x and y position
        fill("white");
        ellipse(this.x, this.y, 13); // Draw white circle on top
        fill("black");
        text(this.number, this.x - 3.5, this.y - 5, 20, 20);
        pop();
      },
    };
  }

  // Create cue ball instance
  cueBall1 = new cueBall(200, 200, 4);
}

// Draw function
function draw() {
  background("darkgreen");
  
  // Draw pool table
  push();
  fill("brown");
  rect(0, 0, 400, 30);
  rect(0, 370, 400, 30);
  pop();
  
  // Show and move cue ball
  cueBall1.show();
  cueBall1.move();
  
  // Show and move pool balls
  for (let counter = 0; counter < poolBalls.length; counter++) {
    poolBalls[counter].show();
    poolBalls[counter].move();
  }
  
  // Show and move spotlights
  for (let counters = 0; counters < spotlights.length; counters++) {
    spotlights[counters].show();
    spotlights[counters].move();
  }
}
